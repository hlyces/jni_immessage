cmake_minimum_required(VERSION 2.6)
PROJECT(Impb)

AUX_SOURCE_DIRECTORY(./apply SRC_LIST1)
AUX_SOURCE_DIRECTORY(./protocol SRC_LIST2)
AUX_SOURCE_DIRECTORY(./jsoncpp SRC_LIST3)
AUX_SOURCE_DIRECTORY(./src SRC_LIST4)
AUX_SOURCE_DIRECTORY(./base64 SRC_LIST5)

if(APPLE)
    SET(PB_LIB_DIR ${CMAKE_CURRENT_SOURCE_DIR}/lib/mac)
elseif(UNIX)
    SET(PB_LIB_DIR ${CMAKE_CURRENT_SOURCE_DIR}/lib/linux)
endif()

SET(LIBRARY_OUTPUT_PATH ./)
#SET(EXECUTABLE_OUTPUT_PATH  ./bin)

ADD_DEFINITIONS( -g -W -Wall -D_REENTRANT -D_FILE_OFFSET_BITS=64 -DAC_HAS_INFO
-DAC_HAS_WARNING -DAC_HAS_ERROR -DAC_HAS_CRITICAL -DTIXML_USE_STL
-DAC_HAS_DEBUG -DLINUX_DAEMON)

INCLUDE_DIRECTORIES( ./ ./jsoncpp  ./include ./protocol ./apply ./src ./include/security ./base64)
LINK_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/ ${PB_LIB_DIR} )

ADD_LIBRARY(impb STATIC ${SRC_LIST1} ${SRC_LIST2} ${SRC_LIST3} ${SRC_LIST4} ${SRC_LIST5})

#ADD_XXXX必须在TARGET_LINK_LIBRARIES前面，否则会报错
#ADD_LIBRARY(${PROJECTNAME} SHARED ${SRC_LIST})
#ADD_EXECUTABLE(${PROJECTNAME} ${SRC_LIST})

TARGET_LINK_LIBRARIES(impb pthread protobuf-lite security)
